{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Here are some details about the ntier architecture.",
    "Parameters": {
        "vpcname": {
            "Description": "Enter the name of your vpc",
            "Type": "String",
            "Default": "vpcprod"
        },
        "vpccidrrange": {
            "Description": "Enter the name of your vpc cidr",
            "Type": "String",
            "Default": "10.0.0.0/16"
        },
        "webcidrrange": {
            "Description": "Enter the name of your websubnet cidr",
            "Type": "String",
            "Default": "10.0.0.0/24"
        },
        "appcidrrange": {
            "Description": "Enter the name of your appsubnet cidr",
            "Type": "String",
            "Default": "10.0.1.0/24"
        },
        "dbcidrrange": {
            "Description": "Enter the name of your dbsubnet cidr",
            "Type": "String",
            "Default": "10.0.2.0/24"
        },
        "webcidrrange2nd": {
            "Description": "Enter the name of your websubnet cidr",
            "Type": "String",
            "Default": "10.0.3.0/24"
        },
        "appcidrrange2nd": {
            "Description": "Enter the name of your appsubnet cidr",
            "Type": "String",
            "Default": "10.0.4.0/24"
        },
        "dbcidrrange2nd": {
            "Description": "Enter the name of your dbsubnet cidr",
            "Type": "String",
            "Default": "10.0.5.0/24"
        },
        "websubnetAZ": {
            "Description": "Enter the name of your websubnet AZ",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "appsubnetAZ": {
            "Description": "Enter the name of your appsubnet AZ",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "dbsubnetAZ": {
            "Description": "Enter the name of your dbsubnet AZ",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "websubnetAZ2nd": {
            "Description": "Enter the name of your websubnet AZ",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "appsubnetAZ2nd": {
            "Description": "Enter the name of your appsubnet AZ",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "dbsubnetAZ2nd": {
            "Description": "Enter the name of your dbsubnet AZ",
            "Type": "AWS::EC2::AvailabilityZone::Name"
    
        },
        "appserversize": {
            "Description": "Select the ec2 instance size",
            "Type": "String",
            "Default": "t2.micro"
        }
    },
    "Resources": {
        "ntiervpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "vpccidrrange"
                },
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "InstanceTenancy": "default",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "vpcname"
                        }
                    }
                ]
            }
        },
        "webSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Ref": "webcidrrange"
                },
                "AvailabilityZone": {
                    "Ref": "websubnetAZ"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "myweb_subnet"
                    }
                ]
            }
        },
        "webSubnet2nd": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Ref": "webcidrrange2nd"
                },
                "AvailabilityZone": {
                    "Ref": "websubnetAZ2nd"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "myweb_subnet"
                    }
                ]
            }
        },
        "appSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Ref": "appcidrrange"
                },
                "AvailabilityZone": {
                    "Ref": "appsubnetAZ"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "myapp_subnet"
                    }
                ]
            }
        },
        "appSubnet2nd": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Ref": "appcidrrange2nd"
                },
                "AvailabilityZone": {
                    "Ref": "appsubnetAZ2nd"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "myapp_subnet"
                    }
                ]
            }
        },
        "dbSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Ref": "dbcidrrange"
                },
                "AvailabilityZone": {
                    "Ref": "dbsubnetAZ"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "mydb_subnet"
                    }
                ]
            }
        },
        "dbSubnet2nd": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Ref": "dbcidrrange2nd"
                },
                "AvailabilityZone": {
                    "Ref": "dbsubnetAZ2nd"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "mydb_subnet"
                    }
                ]
            }
        },
        "myInternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "vpcigw"
                    }
                ]
            }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "InternetGatewayId": {
                    "Ref": "myInternetGateway"
                }
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "publicRouTeTable"
                    }
                ]
            }
        },
        "myPrvrouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PrivateRT"
                    }
                ]
            }
        },
        "Publicgateway": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRoute"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "myInternetGateway",
                    "Tags": [
                        {
                            "Key": "Name",
                            "Value": "publicRouTeTable"
                        }
                    ]
                }
            }
        },
        "mySubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "webSubnet"
                },
                "RouteTableId": {
                    "Ref": "PublicRoute"
                }
            }
        },
        "mySubnetRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "webSubnet2nd"
                },
                "RouteTableId": {
                    "Ref": "PublicRoute"
                }
            }
        },
        "myappSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "appSubnet"
                },
                "RouteTableId": {
                    "Ref": "myPrvrouteTable"
                }
            }
        },
        "myappSubnetRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "appSubnet2nd"
                },
                "RouteTableId": {
                    "Ref": "myPrvrouteTable"
                }
            }
        },
        "mydbSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "dbSubnet"
                },
                "RouteTableId": {
                    "Ref": "myPrvrouteTable"
                }
            }
        },
        "mydbSubnetRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "dbSubnet2nd"
                },
                "RouteTableId": {
                    "Ref": "myPrvrouteTable"
                }
            }
        },
        "DBSubnetGroup": {
            "Type": "AWS::RDS::DBSecurityGroup",
            "Properties": {
                "DBSubnetGroupDescription": "HA for IT",
                "SubnetIds": [
                    {
                        "Ref": "dbSubnet"
                    },
                    {
                        "Ref": "dbSubnet2nd"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "dbsubnetgrp"
                    }
                ]
            }
        },
        "dbSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "security group for db",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "vpccidrrange"
                        },
                        "Ipprotocol": "tcp",
                        "FromPort": "3306",
                        "Toport": "3306"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc",
                    "Tags": [
                        {
                            "Key": "Name",
                            "Value": "dbsecuritygrp"
                        }
                    ]
                }
            }
        },
        "appsecuritygrp": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "security group for app",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "vpccidrrange"
                        },
                        "Ipprotocol": "tcp",
                        "FromPort": "22",
                        "Toport": "22"
                    },
                    {
                        "CidrIp": {
                            "Ref": "vpccidrrange"
                        },
                        "Ipprotocol": "tcp",
                        "FromPort": "80",
                        "Toport": "80"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc",
                    "Tags": [
                        {
                            "Key": "Name",
                            "Value": "appsecuritygrp"
                        }
                    ]
                }
            }
        },
        "websecuritygrp": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "security group for app",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "vpccidrrange"
                        },
                        "Ipprotocol": "tcp",
                        "FromPort": "22",
                        "Toport": "22"
                    },
                    {
                        "CidrIp": {
                            "Ref": "vpccidrrange"
                        },
                        "Ipprotocol": "tcp",
                        "FromPort": "80",
                        "Toport": "80"
                    },
                    {
                        "CidrIp": {
                            "Ref": "vpccidrrange"
                        },
                        "Ipprotocol": "tcp",
                        "FromPort": "443",
                        "Toport": "443"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc",
                    "Tags": [
                        {
                            "Key": "Name",
                            "Value": "websecuritygrp"
                        }
                    ]
                }
            }
        },
        "ntierdb": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "AllocatedStorage": "20",
                "DBInstanceClass": "db.t2.micro",
                "AllowMajorVersionUpgrade": "false",
                "AutoMinorVersionUpgrade": "false",
                "BackupRetentionPeriod": "0",
                "DBInstanceIdentifier": "itntierdb",
                "DBName": "itntier",
                "DBSubnetGroupName": {
                    "Ref": "DBSubnetGroup"
                },
                "Engine": "mysql",
                "MasterUsername": "admin",
                "MasterUserPassword": "admin123",
                "MultiAZ": "false",
                "PubliclyAccessible": "true",
                "StorageType": "gp2",
                "VPCSecurityGroups": {
                    "Ref": "dbSecurityGroup"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "mysqldb"
                    }
                ]
            }
        },
        "appserver": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName": "A4L",
                "DisableApiTermination": "-",
                "ImageId": "ami-0f1aec6bc79ad857c",
                "InstanceType": {
                    "Ref": "appserversize"
                },
                "Monitoring": "false",
                "SubnetId": {
                    "Ref": "appSubnet"
                },
                "SecurityGroupIds": {
                    "Ref": "appsecuritygrp"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "appserver1"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -ex",
                                "sudo apt get update -y",
                                "apt get install Tomcat8 -y",
                                "systemctl start Tomcat9",
                                "systemctl enable Tomcat9",
                            ]
                        ]
                    }
                }
            }
        },
        "appserver2": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName": "A4L",
                "DisableApiTermination": "-",
                "ImageId": "ami-0f1aec6bc79ad857c",
                "InstanceType": {
                    "Ref": "appserversize"
                },
                "Monitoring": "false",
                "SubnetId": {
                    "Ref": "appSubnet2nd"
                },
                "SecurityGroupIds": {
                    "Ref": "appsecuritygrp"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "appserver2"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -ex",
                                "sudo apt get update -y",
                                "apt get install Tomcat8 -y",
                                "systemctl start Tomcat9",
                                "systemctl enable Tomcat9",
                            ]
                        ]
                    }
                }
            }
        }
    }
}